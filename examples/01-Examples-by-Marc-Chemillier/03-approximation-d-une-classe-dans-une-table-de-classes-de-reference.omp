; OM File Header - Saved 2023/05/05 21:27:05
; (7.02 :patc (om-make-point 37.0D0 163) (om-make-point 167 96) (om-make-point 741 551) "" 183 0 "2023/04/28 15:09:36" "2023/05/05 21:27:05")
; End File Header
; External resources 
; (list (list (quote :picture) "#P\"../../resources/pict/dist-classes\""))
(in-package :om)(load-lib-for (quote ("OMLindberg")))(setf *om-current-persistent* (om-load-patch1 "03-approximation-d-une-classe-dans-une-table-de-classes-de-reference" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 175 90) (quote "a = element of set-class 1$$b = element of set-class 2$$k = min. of a and b") "" (om-make-point 260 188) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-VIEW" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 105 266) (om-make-point 117 42) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 93 22) "untitled"))) (om-set-dialog-item-text rep "0.79930526") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 192 46) (om-make-point 46 30) (quote |6-34|) "6-34" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 102 45) (om-make-point 39 30) (quote |6-2|) "6-2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PC 2" (quote omlindberg::pc) (quote ((om-load-inputfun (quote input-funbox) "Symbol or List" "SET-CLASS" (list (quote |6-27A|) (list (quote |3-3A|) (quote |3-3B|)) (list (quote |6-27B|)))))) (om-make-point 193 85) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PC" (quote omlindberg::pc) (quote ((om-load-inputfun (quote input-funbox) "Symbol or List" "SET-CLASS" (list (quote |6-27A|) (list (quote |3-3A|) (quote |3-3B|)) (list (quote |6-27B|)))))) (om-make-point 100 78) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "DIST-CLASSES" (quote omlindberg::dist-classes) (quote ((om-load-inputfun (quote input-funbox) "integers" "PC1" (list 0 1 2 3 4 5)) (om-load-inputfun (quote input-funbox) "integers" "PC2" (list 0 1 3 5 7 9)))) (om-make-point 129 171) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((6 0 1 0 nil 0) (2 0 4 0 nil 0) (3 0 5 0 nil 0) (5 0 6 0 nil 0) (4 0 6 1 nil 0))) (list (let ((newpict (make-instance (quote patch-picture) :name "dist-classes" :source (quote user) :pict-pathname (restore-pict-path (restore-path nil)) :thepict (om-get-picture "dist-classes" (quote user)) :storemode :external :draw-params (quote (p 0 0 100 100)) :extraobjs nil))) (setf (pict-pos newpict) (om-make-point 251 84)) (setf (pict-size newpict) (om-make-point 388 117)) newpict)) 7.02))
